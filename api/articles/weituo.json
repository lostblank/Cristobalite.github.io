{"title":"委托","uid":"c31509689845d3f9a7357a64a02fc66b","slug":"weituo","date":"2024-01-28T10:13:13.000Z","updated":"2024-02-07T09:23:15.178Z","comments":true,"path":"api/articles/weituo.json","keywords":null,"cover":"https://s2.loli.net/2024/01/29/f42QuwqljemYs9c.jpg","content":"<h1 id=\"委托\"><a href=\"#委托\" class=\"headerlink\" title=\"委托\"></a>委托</h1><hr>\n<h2 id=\"什么是委托\"><a href=\"#什么是委托\" class=\"headerlink\" title=\"什么是委托\"></a>什么是委托</h2><p>委托（delegate）是函数指针的升级版</p>\n<p>一切皆地址</p>\n<ul>\n<li>变量（数据）是某个地址为起点的一段内存中存储的值</li>\n<li>函数（算法）是某个地址为起点的一段内存中所存储的一组机器语言指令</li>\n</ul>\n<p>直接调用与间接调用</p>\n<ul>\n<li>直接调用：通过函数名来调用函数，CPU通过函数名直接获得函数所在地址并开始执行——返回</li>\n<li>间接调用：通过函数指针来调用函数，CPU通过读取函数指针存储的值获得函数所在地址并开始执行——返回</li>\n</ul>\n<p>Java中没有与委托相对应的功能实体</p>\n<p>委托的简单使用</p>\n<p>Action委托</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">func</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">class</span> <span class=\"title\">Program</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span>(<span class=\"params\"><span class=\"built_in\">string</span>[] args</span>)</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            Calculator calculator = <span class=\"keyword\">new</span> Calculator();</span><br><span class=\"line\">            Action action = <span class=\"keyword\">new</span> Action(calculator.Report);</span><br><span class=\"line\">            calculator.Report();\t\t\t\t<span class=\"comment\">//直接调用，不使用Action委托</span></span><br><span class=\"line\">            action.Invoke();\t\t\t\t\t\t<span class=\"comment\">//使用Action委托进行间接调用</span></span><br><span class=\"line\">            action();\t\t\t\t\t\t\t\t\t<span class=\"comment\">//使用Action的简便写法</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">class</span> <span class=\"title\">Calculator</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">Report</span>()</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                Console.WriteLine(<span class=\"string\">&quot;hello!&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>Func委托</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">func</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">class</span> <span class=\"title\">Program</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span>(<span class=\"params\"><span class=\"built_in\">string</span>[] args</span>)</span></span><br><span class=\"line\">        &#123;       </span><br><span class=\"line\">            Func&lt;<span class=\"built_in\">int</span>, <span class=\"built_in\">int</span>, <span class=\"built_in\">int</span>&gt; func1 = <span class=\"keyword\">new</span> Func&lt;<span class=\"built_in\">int</span>, <span class=\"built_in\">int</span>, <span class=\"built_in\">int</span>&gt;(calculator.Add);\t\t<span class=\"comment\">//Func属于泛型</span></span><br><span class=\"line\">            Func&lt;<span class=\"built_in\">int</span>, <span class=\"built_in\">int</span>, <span class=\"built_in\">int</span>&gt; func2 = <span class=\"keyword\">new</span> Func&lt;<span class=\"built_in\">int</span>, <span class=\"built_in\">int</span>, <span class=\"built_in\">int</span>&gt;(calculator.Sub);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"built_in\">int</span> x = <span class=\"number\">100</span>;</span><br><span class=\"line\">            <span class=\"built_in\">int</span> y = <span class=\"number\">200</span>;</span><br><span class=\"line\">            <span class=\"built_in\">int</span> z = <span class=\"number\">0</span>;</span><br><span class=\"line\">            z = func1.Invoke(x, y);\t\t\t\t<span class=\"comment\">//间接调用，也可以使用上面的简便写法</span></span><br><span class=\"line\">            Console.WriteLine(z);</span><br><span class=\"line\">            z = func2.Invoke(x, y);</span><br><span class=\"line\">            Console.WriteLine(z);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">class</span> <span class=\"title\">Calculator</span></span><br><span class=\"line\">        &#123;          </span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"built_in\">int</span> <span class=\"title\">Add</span>(<span class=\"params\"><span class=\"built_in\">int</span> x,<span class=\"built_in\">int</span> y</span>)</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"built_in\">int</span> result= x + y;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"built_in\">int</span> <span class=\"title\">Sub</span>(<span class=\"params\"><span class=\"built_in\">int</span> x, <span class=\"built_in\">int</span> y</span>)</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"built_in\">int</span> result = x - y;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"委托的声明（自定义）\"><a href=\"#委托的声明（自定义）\" class=\"headerlink\" title=\"委托的声明（自定义）\"></a>委托的声明（自定义）</h2><p>委托是一种类（class），类是数据类型所以委托也是一种数据类型</p>\n<p>它的声明方式和一般类不同</p>\n<p>注意声明委托的问题</p>\n<ul>\n<li>避免写错地方结果声明成嵌套类型</li>\n<li>与program平行 ，声明在名称空间里面</li>\n</ul>\n<p>委托与所封装的方法必需“类型兼容”</p>\n<ul>\n<li><p>返回值的数据类型一致</p>\n</li>\n<li><p>参数列表在个数和数据类型上一致（参数名不需要一样）</p>\n<img src=\"https://s2.loli.net/2024/01/25/7m9gXARM4iPL1Qf.png\" alt=\"image-20240125165659404\" style=\"zoom: 67%;\" /></li>\n</ul>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Linq;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Text;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Threading.Tasks;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">weituo</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"built_in\">delegate</span> <span class=\"built_in\">double</span> <span class=\"title\">Calc</span>(<span class=\"params\"><span class=\"built_in\">double</span> x, <span class=\"built_in\">double</span> y</span>)</span>;\t\t<span class=\"comment\">//声明委托Calc ，double类型，两个double类型的参数</span></span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"keyword\">class</span> <span class=\"title\">Program</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span>(<span class=\"params\"><span class=\"built_in\">string</span>[] args</span>)</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            Calculator calculator = <span class=\"keyword\">new</span> Calculator();</span><br><span class=\"line\">            Calc calc1 = <span class=\"keyword\">new</span> Calc(calculator.Add);</span><br><span class=\"line\">            Calc calc2 = <span class=\"keyword\">new</span> Calc(calculator.Sub);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"built_in\">double</span> x = <span class=\"number\">100</span>;</span><br><span class=\"line\">            <span class=\"built_in\">double</span> y = <span class=\"number\">200</span>;</span><br><span class=\"line\">            <span class=\"built_in\">double</span> z = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">            z= calc1.Invoke(x, y);</span><br><span class=\"line\">            Console.WriteLine(z);</span><br><span class=\"line\">            z = calc2(x, y);</span><br><span class=\"line\">            Console.WriteLine(z);</span><br><span class=\"line\">           <span class=\"comment\">//Console.WriteLine(calc1.Invoke(100, 200));</span></span><br><span class=\"line\">           <span class=\"comment\">//Console.WriteLine(calc2(200, 300));</span></span><br><span class=\"line\">            </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">class</span> <span class=\"title\">Calculator</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"built_in\">double</span> <span class=\"title\">Add</span>(<span class=\"params\"><span class=\"built_in\">double</span> x, <span class=\"built_in\">double</span> y</span>)</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> x + y;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"built_in\">double</span> <span class=\"title\">Sub</span>(<span class=\"params\"><span class=\"built_in\">double</span> x, <span class=\"built_in\">double</span> y</span>)</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> x - y;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"委托的一般使用\"><a href=\"#委托的一般使用\" class=\"headerlink\" title=\"委托的一般使用\"></a>委托的一般使用</h2><p>把方法当做参数传给另一个方法</p>\n<p>模板方法：借用指定外部方法来产生结果</p>\n<p>相当于填空题</p>\n<p>常位于代码中部</p>\n<p>委托有返回值</p>\n<p>Reuse，复用，可以提高工作效率减少bug的引入</p>\n<p>示例</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">mobanweituo</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">class</span> <span class=\"title\">Program</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span>(<span class=\"params\"><span class=\"built_in\">string</span>[] args</span>)</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 创建ProductFactory和WrapFactory的实例</span></span><br><span class=\"line\">            ProductFactory productFactory = <span class=\"keyword\">new</span> ProductFactory();</span><br><span class=\"line\">            WrapFactory wrapFactory = <span class=\"keyword\">new</span> WrapFactory();</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 定义创建不同产品（Pizza和Car）的函数</span></span><br><span class=\"line\">            Func&lt;Product&gt; func1 = <span class=\"keyword\">new</span> Func&lt;Product&gt;(productFactory.MakePizza);</span><br><span class=\"line\">            Func&lt;Product&gt; func2 = <span class=\"keyword\">new</span> Func&lt;Product&gt;(productFactory.MakeCar);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 使用WrapFactory包装产品</span></span><br><span class=\"line\">            Box box1 = wrapFactory.WrapProduct(func1);</span><br><span class=\"line\">            Box box2 = wrapFactory.WrapProduct(func2);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 显示盒子中产品的名称</span></span><br><span class=\"line\">            Console.WriteLine(box1.Product.Name);</span><br><span class=\"line\">            Console.WriteLine(box2.Product.Name);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 表示一个产品</span></span><br><span class=\"line\">        <span class=\"keyword\">class</span> <span class=\"title\">Product</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> Name &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 表示包含产品的盒子</span></span><br><span class=\"line\">        <span class=\"keyword\">class</span> <span class=\"title\">Box</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">public</span> Product Product &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 用于将产品包装在盒子中的工厂，模板方法</span></span><br><span class=\"line\">        <span class=\"keyword\">class</span> <span class=\"title\">WrapFactory</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> Box <span class=\"title\">WrapProduct</span>(<span class=\"params\">Func&lt;Product&gt; getProduct</span>)</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"comment\">// 创建一个新的盒子并将产品包装在内</span></span><br><span class=\"line\">                Box box = <span class=\"keyword\">new</span> Box();</span><br><span class=\"line\">                Product product = getProduct.Invoke();</span><br><span class=\"line\">                box.Product = product;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> box;</span><br><span class=\"line\">            &#125; </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 用于创建不同产品（Pizza和Car）的工厂</span></span><br><span class=\"line\">        <span class=\"keyword\">class</span> <span class=\"title\">ProductFactory</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> Product <span class=\"title\">MakePizza</span>()</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"comment\">// 创建一个Pizza产品</span></span><br><span class=\"line\">                Product product = <span class=\"keyword\">new</span> Product();</span><br><span class=\"line\">                product.Name = <span class=\"string\">&quot;Pizza&quot;</span>;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> product;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> Product <span class=\"title\">MakeCar</span>()</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"comment\">// 创建一个Car产品</span></span><br><span class=\"line\">                Product product = <span class=\"keyword\">new</span> Product();</span><br><span class=\"line\">                product.Name = <span class=\"string\">&quot;Car&quot;</span>;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> product;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"回调（callback）方法：调用指定的外部方法\"><a href=\"#回调（callback）方法：调用指定的外部方法\" class=\"headerlink\" title=\"回调（callback）方法：调用指定的外部方法\"></a>回调（callback）方法：调用指定的外部方法</h2><p>相当于流水线 </p>\n<p>常位于代码末尾</p>\n<p>委托无返回值</p>\n<p>用委托封装一个外部方法，再通过委托传到方法内部，实现间接调用</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">huidiao</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">class</span> <span class=\"title\">Program</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span>(<span class=\"params\"><span class=\"built_in\">string</span>[] args</span>)</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 创建ProductFactory和WrapFactory的实例</span></span><br><span class=\"line\">            ProductFactory productFactory = <span class=\"keyword\">new</span> ProductFactory();</span><br><span class=\"line\">            WrapFactory wrapFactory = <span class=\"keyword\">new</span> WrapFactory();</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 定义创建不同产品（Pizza和Car）的函数</span></span><br><span class=\"line\">            Func&lt;Product&gt; func1 = <span class=\"keyword\">new</span> Func&lt;Product&gt;(productFactory.MakePizza);</span><br><span class=\"line\">            Func&lt;Product&gt; func2 = <span class=\"keyword\">new</span> Func&lt;Product&gt;(productFactory.MakeCar);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 创建Logger实例</span></span><br><span class=\"line\">            Logger logger = <span class=\"keyword\">new</span> Logger();</span><br><span class=\"line\">            <span class=\"comment\">// 定义记录日志的委托</span></span><br><span class=\"line\">            Action&lt;Product&gt; log = <span class=\"keyword\">new</span> Action&lt;Product&gt;(logger.Log);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 使用WrapFactory包装产品，并在价格大于等于50时记录日志</span></span><br><span class=\"line\">            Box box1 = wrapFactory.WrapProduct(func1, log);</span><br><span class=\"line\">            Box box2 = wrapFactory.WrapProduct(func2, log);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 显示盒子中产品的名称</span></span><br><span class=\"line\">            Console.WriteLine(box1.Product.Name);</span><br><span class=\"line\">            Console.WriteLine(box2.Product.Name);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 日志记录器类</span></span><br><span class=\"line\">        <span class=\"keyword\">class</span> <span class=\"title\">Logger</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 记录产品日志的方法</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">Log</span>(<span class=\"params\">Product product</span>)</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                Console.WriteLine(<span class=\"string\">&quot;产品&#x27;&#123;0&#125;&#x27;在 &#123;1&#125; 创建。价格为 &#123;2&#125;&quot;</span>, product.Name, DateTime.UtcNow, product.Price);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 产品类</span></span><br><span class=\"line\">        <span class=\"keyword\">class</span> <span class=\"title\">Product</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">public</span> <span class=\"built_in\">string</span> Name &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">            <span class=\"keyword\">public</span> <span class=\"built_in\">double</span> Price &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 包含产品的盒子类</span></span><br><span class=\"line\">        <span class=\"keyword\">class</span> <span class=\"title\">Box</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">public</span> Product Product &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 将产品包装在盒子中的工厂类</span></span><br><span class=\"line\">        <span class=\"keyword\">class</span> <span class=\"title\">WrapFactory</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 包装产品并在价格大于等于50时触发日志回调</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> Box <span class=\"title\">WrapProduct</span>(<span class=\"params\">Func&lt;Product&gt; getProduct, Action&lt;Product&gt; logCallback</span>)</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                Box box = <span class=\"keyword\">new</span> Box();</span><br><span class=\"line\">                Product product = getProduct.Invoke();</span><br><span class=\"line\">                </span><br><span class=\"line\">                <span class=\"comment\">// 如果产品的价格大于等于50，则记录日志</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (product.Price &gt;= <span class=\"number\">50</span>)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    logCallback(product);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                box.Product = product;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> box;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 创建不同产品（Pizza和Car）的工厂类</span></span><br><span class=\"line\">        <span class=\"keyword\">class</span> <span class=\"title\">ProductFactory</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 创建Pizza产品的方法</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> Product <span class=\"title\">MakePizza</span>()</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                Product product = <span class=\"keyword\">new</span> Product();</span><br><span class=\"line\">                product.Name = <span class=\"string\">&quot;Pizza&quot;</span>;</span><br><span class=\"line\">                product.Price = <span class=\"number\">55</span>;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> product;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 创建Car产品的方法</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> Product <span class=\"title\">MakeCar</span>()</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                Product product = <span class=\"keyword\">new</span> Product();</span><br><span class=\"line\">                product.Name = <span class=\"string\">&quot;Car&quot;</span>;</span><br><span class=\"line\">                product.Price = <span class=\"number\">100</span>;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> product;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<p>缺点</p>\n<ol>\n<li>这是一种方法级别的紧耦合，现实工作中要谨慎使用</li>\n<li>使可读性下降，debug难度增加</li>\n<li>把委托回调，异步调用和多线程纠缠在一起，会让代码变得难以阅读和维护</li>\n<li>委托使用不当有可能造成内存泄露和程序性能下降</li>\n</ol>\n<hr>\n<h1 id=\"委托的高级使用\"><a href=\"#委托的高级使用\" class=\"headerlink\" title=\"委托的高级使用\"></a>委托的高级使用</h1><h2 id=\"多播委托（multicast）\"><a href=\"#多播委托（multicast）\" class=\"headerlink\" title=\"多播委托（multicast）\"></a>多播委托（multicast）</h2><p>示例</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Linq;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Text;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Threading.Tasks;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">WeituoPro</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">class</span> <span class=\"title\">Program</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span>(<span class=\"params\"><span class=\"built_in\">string</span>[] args</span>)</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            Student student1 = <span class=\"keyword\">new</span> Student() &#123; ID = <span class=\"number\">1</span>, PenColor = ConsoleColor.Yellow &#125;;</span><br><span class=\"line\">            Student student2 = <span class=\"keyword\">new</span> Student() &#123; ID = <span class=\"number\">1</span>, PenColor = ConsoleColor.Red &#125;;</span><br><span class=\"line\">            Student student3 = <span class=\"keyword\">new</span> Student() &#123; ID = <span class=\"number\">1</span>, PenColor = ConsoleColor.Green &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">            Action action1 = <span class=\"keyword\">new</span> Action(student1.DoHomework);</span><br><span class=\"line\">            Action action2 = <span class=\"keyword\">new</span> Action(student2.DoHomework);</span><br><span class=\"line\">            Action action3 = <span class=\"keyword\">new</span> Action(student3.DoHomework);</span><br><span class=\"line\"></span><br><span class=\"line\">            action1 += action2;</span><br><span class=\"line\">            action1 += action3;</span><br><span class=\"line\">            action1.Invoke();\t\t\t\t\t<span class=\"comment\">//使用一个委托封装多个方法，多播委托，调用时执行顺序按照封装顺序执行</span></span><br><span class=\"line\">          </span><br><span class=\"line\">          \t<span class=\"comment\">//action1.Invoke();\t\t\t\t单播委托</span></span><br><span class=\"line\">            <span class=\"comment\">//action2.Invoke();</span></span><br><span class=\"line\">            <span class=\"comment\">//action3.Invoke();</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">         </span><br><span class=\"line\">        <span class=\"keyword\">class</span> <span class=\"title\">Student</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">public</span> <span class=\"built_in\">int</span> ID &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">            <span class=\"keyword\">public</span> ConsoleColor PenColor &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">DoHomework</span>()</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"built_in\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">5</span>; i++)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    Console.ForegroundColor = <span class=\"keyword\">this</span>.PenColor;</span><br><span class=\"line\">                    Console.WriteLine(<span class=\"string\">&quot;Student&#123;0&#125; doing homework &#123;1&#125; hour(s)&quot;</span>,<span class=\"keyword\">this</span>.ID,i);</span><br><span class=\"line\">                    Task.Delay(<span class=\"number\">1000</span>).Wait();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"隐式异步调用\"><a href=\"#隐式异步调用\" class=\"headerlink\" title=\"隐式异步调用\"></a>隐式异步调用</h2><h3 id=\"同步与异步的简介\"><a href=\"#同步与异步的简介\" class=\"headerlink\" title=\"同步与异步的简介\"></a>同步与异步的简介</h3><p>中英文语言差异</p>\n<p>同步：你做完了（在你的基础上）我接着做</p>\n<p>异步：咱们两个同时做（相当于汉语中的同步进行）</p>\n<h3 id=\"同步调用与异步调用的对比\"><a href=\"#同步调用与异步调用的对比\" class=\"headerlink\" title=\"同步调用与异步调用的对比\"></a>同步调用与异步调用的对比</h3><p>每一个运行的程序是一个进程（process）</p>\n<p>每个进程可以有一个或者多个进程（thread）</p>\n<p>同步调用是在同一线程内</p>\n<p>异步调用的底层机理是多线程</p>\n<p>串行——同步——单线程</p>\n<p>并行——异步——多线程</p>\n<p>直接同步调用就是直接调用方法，使用委托则是间接同步调用，多播委托也属于同步调用</p>\n<h3 id=\"隐式多线程与显示多线程\"><a href=\"#隐式多线程与显示多线程\" class=\"headerlink\" title=\"隐式多线程与显示多线程\"></a>隐式多线程与显示多线程</h3><p>直接同步调用：使用方法名</p>\n<p>间接同步调用：使用单播&#x2F;多播委托的Invoke方法</p>\n<p>隐式异步调用：使用委托的BeginInvoke</p>\n<p>显式异步调用：使用Thread或者Task</p>\n<p>示例</p>\n<p>隐式异步调用</p>\n<figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Linq;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Text;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Threading.Tasks;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">WeituoPro</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">class</span> <span class=\"title\">Program</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span>(<span class=\"params\"><span class=\"built_in\">string</span>[] args</span>)</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            Student student1 = <span class=\"keyword\">new</span> Student() &#123; ID = <span class=\"number\">1</span>, PenColor = ConsoleColor.Yellow &#125;;</span><br><span class=\"line\">            Student student2 = <span class=\"keyword\">new</span> Student() &#123; ID = <span class=\"number\">1</span>, PenColor = ConsoleColor.Red &#125;;</span><br><span class=\"line\">            Student student3 = <span class=\"keyword\">new</span> Student() &#123; ID = <span class=\"number\">1</span>, PenColor = ConsoleColor.Green &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">            Action action1 = <span class=\"keyword\">new</span> Action(student1.DoHomework);</span><br><span class=\"line\">            Action action2 = <span class=\"keyword\">new</span> Action(student2.DoHomework);</span><br><span class=\"line\">            Action action3 = <span class=\"keyword\">new</span> Action(student3.DoHomework);</span><br><span class=\"line\"></span><br><span class=\"line\">            action1.BeginInvoke(<span class=\"literal\">null</span>, <span class=\"literal\">null</span>);\t\t\t<span class=\"comment\">//单播隐式异步调用，但是多个线程在访问同一个资源时会发生资源冲突问题</span></span><br><span class=\"line\">            action2.BeginInvoke(<span class=\"literal\">null</span>, <span class=\"literal\">null</span>);</span><br><span class=\"line\">            action3.BeginInvoke(<span class=\"literal\">null</span>, <span class=\"literal\">null</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"built_in\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">5</span>; i++)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                Console.ForegroundColor = ConsoleColor.Blue;</span><br><span class=\"line\">                Console.WriteLine(<span class=\"string\">&quot;test &#123;0&#125;&quot;</span>,i);</span><br><span class=\"line\">                Task.Delay(<span class=\"number\">1000</span>).Wait();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">         </span><br><span class=\"line\">        <span class=\"keyword\">class</span> <span class=\"title\">Student</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">public</span> <span class=\"built_in\">int</span> ID &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">            <span class=\"keyword\">public</span> ConsoleColor PenColor &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">DoHomework</span>()</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"built_in\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">5</span>; i++)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    Console.ForegroundColor = <span class=\"keyword\">this</span>.PenColor;</span><br><span class=\"line\">                    Console.WriteLine(<span class=\"string\">&quot;Student&#123;0&#125; doing homework &#123;1&#125; hour(s)&quot;</span>,<span class=\"keyword\">this</span>.ID,i);</span><br><span class=\"line\">                    Task.Delay(<span class=\"number\">1000</span>).Wait();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"显式异步调用\"><a href=\"#显式异步调用\" class=\"headerlink\" title=\"显式异步调用\"></a>显式异步调用</h2><figure class=\"highlight c#\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">using</span> System;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Collections.Generic;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Linq;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Text;</span><br><span class=\"line\"><span class=\"keyword\">using</span> System.Threading.Tasks;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">WeituoPro</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">class</span> <span class=\"title\">Program</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">Main</span>(<span class=\"params\"><span class=\"built_in\">string</span>[] args</span>)</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            Student student1 = <span class=\"keyword\">new</span> Student() &#123; ID = <span class=\"number\">1</span>, PenColor = ConsoleColor.Yellow &#125;;</span><br><span class=\"line\">            Student student2 = <span class=\"keyword\">new</span> Student() &#123; ID = <span class=\"number\">1</span>, PenColor = ConsoleColor.Red &#125;;</span><br><span class=\"line\">            Student student3 = <span class=\"keyword\">new</span> Student() &#123; ID = <span class=\"number\">1</span>, PenColor = ConsoleColor.Green &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">            Action action1 = <span class=\"keyword\">new</span> Action(student1.DoHomework);</span><br><span class=\"line\">            Action action2 = <span class=\"keyword\">new</span> Action(student2.DoHomework);</span><br><span class=\"line\">            Action action3 = <span class=\"keyword\">new</span> Action(student3.DoHomework);</span><br><span class=\"line\"></span><br><span class=\"line\">            Task task1 = <span class=\"keyword\">new</span> Task(<span class=\"keyword\">new</span> Action(student1.DoHomework));</span><br><span class=\"line\">            Task task2 = <span class=\"keyword\">new</span> Task(<span class=\"keyword\">new</span> Action(student2.DoHomework));</span><br><span class=\"line\">            Task task3 = <span class=\"keyword\">new</span> Task(<span class=\"keyword\">new</span> Action(student3.DoHomework));</span><br><span class=\"line\"></span><br><span class=\"line\">            task1.Start();</span><br><span class=\"line\">            task2.Start();</span><br><span class=\"line\">            task3.Start();</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"built_in\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">5</span>; i++)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                Console.ForegroundColor = ConsoleColor.Blue;</span><br><span class=\"line\">                Console.WriteLine(<span class=\"string\">&quot;test &#123;0&#125;&quot;</span>,i);</span><br><span class=\"line\">                Task.Delay(<span class=\"number\">1000</span>).Wait();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">         </span><br><span class=\"line\">        <span class=\"keyword\">class</span> <span class=\"title\">Student</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">public</span> <span class=\"built_in\">int</span> ID &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\">            <span class=\"keyword\">public</span> ConsoleColor PenColor &#123; <span class=\"keyword\">get</span>; <span class=\"keyword\">set</span>; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">DoHomework</span>()</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"built_in\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">5</span>; i++)</span><br><span class=\"line\">                &#123;</span><br><span class=\"line\">                    Console.ForegroundColor = <span class=\"keyword\">this</span>.PenColor;</span><br><span class=\"line\">                    Console.WriteLine(<span class=\"string\">&quot;Student&#123;0&#125; doing homework &#123;1&#125; hour(s)&quot;</span>,<span class=\"keyword\">this</span>.ID,i);</span><br><span class=\"line\">                    Task.Delay(<span class=\"number\">1000</span>).Wait();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<p>应该适时地使用接口（interface）取代一些对委托的使用</p>\n<ul>\n<li>Java完全地使用接口取代了委托的功能，即Java没有与C#中委托相对应的功能实体</li>\n</ul>\n","feature":true,"text":"委托 什么是委托委托（delegate）是函数指针的升级版 一切皆地址 变量（数据）是某个地址为起点的一段内存中存储的值 函数（算法）是某个地址为起点的一段内存...","permalink":"/post/weituo","photos":[],"count_time":{"symbolsCount":"14k","symbolsTime":"13 mins."},"categories":[{"name":"编程","slug":"编程","count":3,"path":"api/categories/编程.json"}],"tags":[{"name":"C#","slug":"C","count":3,"path":"api/tags/C.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%A7%94%E6%89%98\"><span class=\"toc-text\">委托</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BB%80%E4%B9%88%E6%98%AF%E5%A7%94%E6%89%98\"><span class=\"toc-text\">什么是委托</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%A7%94%E6%89%98%E7%9A%84%E5%A3%B0%E6%98%8E%EF%BC%88%E8%87%AA%E5%AE%9A%E4%B9%89%EF%BC%89\"><span class=\"toc-text\">委托的声明（自定义）</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%A7%94%E6%89%98%E7%9A%84%E4%B8%80%E8%88%AC%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">委托的一般使用</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9B%9E%E8%B0%83%EF%BC%88callback%EF%BC%89%E6%96%B9%E6%B3%95%EF%BC%9A%E8%B0%83%E7%94%A8%E6%8C%87%E5%AE%9A%E7%9A%84%E5%A4%96%E9%83%A8%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">回调（callback）方法：调用指定的外部方法</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%A7%94%E6%89%98%E7%9A%84%E9%AB%98%E7%BA%A7%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">委托的高级使用</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%A4%9A%E6%92%AD%E5%A7%94%E6%89%98%EF%BC%88multicast%EF%BC%89\"><span class=\"toc-text\">多播委托（multicast）</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%9A%90%E5%BC%8F%E5%BC%82%E6%AD%A5%E8%B0%83%E7%94%A8\"><span class=\"toc-text\">隐式异步调用</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%90%8C%E6%AD%A5%E4%B8%8E%E5%BC%82%E6%AD%A5%E7%9A%84%E7%AE%80%E4%BB%8B\"><span class=\"toc-text\">同步与异步的简介</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%90%8C%E6%AD%A5%E8%B0%83%E7%94%A8%E4%B8%8E%E5%BC%82%E6%AD%A5%E8%B0%83%E7%94%A8%E7%9A%84%E5%AF%B9%E6%AF%94\"><span class=\"toc-text\">同步调用与异步调用的对比</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%9A%90%E5%BC%8F%E5%A4%9A%E7%BA%BF%E7%A8%8B%E4%B8%8E%E6%98%BE%E7%A4%BA%E5%A4%9A%E7%BA%BF%E7%A8%8B\"><span class=\"toc-text\">隐式多线程与显示多线程</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%98%BE%E5%BC%8F%E5%BC%82%E6%AD%A5%E8%B0%83%E7%94%A8\"><span class=\"toc-text\">显式异步调用</span></a></li></ol></li></ol>","author":{"name":"时雨","slug":"blog-author","avatar":"https://s2.loli.net/2024/01/28/mshkqWEFbd1xBIU.jpg","link":"/","description":"特别鸣谢你制造更欢乐的我<p>Yesterday is history</p><p>Tomorrow is mystery</p><p>Today is a gift</p>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"参数","uid":"e9b6cce2ce6d201168276865751c9288","slug":"canshu","date":"2024-01-28T10:13:14.000Z","updated":"2024-02-07T09:05:04.640Z","comments":true,"path":"api/articles/canshu.json","keywords":null,"cover":"https://s2.loli.net/2024/01/30/S39KiDb65lHyuLQ.jpg","text":"传值，引用，数组，具名，可选参数，扩展方法 方法参数传值参数：不带修饰符的形参，一个值形参对应一个局部变量，初始值来自该方法调用所提供的相应实参 传值类型传进来...","permalink":"/post/canshu","photos":[],"count_time":{"symbolsCount":"4.1k","symbolsTime":"4 mins."},"categories":[{"name":"编程","slug":"编程","count":3,"path":"api/categories/编程.json"}],"tags":[{"name":"C#","slug":"C","count":3,"path":"api/tags/C.json"}],"author":{"name":"时雨","slug":"blog-author","avatar":"https://s2.loli.net/2024/01/28/mshkqWEFbd1xBIU.jpg","link":"/","description":"特别鸣谢你制造更欢乐的我<p>Yesterday is history</p><p>Tomorrow is mystery</p><p>Today is a gift</p>","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{}}