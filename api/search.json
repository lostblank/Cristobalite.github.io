[{"id":"e9b6cce2ce6d201168276865751c9288","title":"参数","content":"事件\n定义\nEvent，事件，即 能够发生什么的什么事情\n\n\n角色\n事件是一种使对象或类能够提供通知的成员\n对象x拥有一个事件y ，想表达的思想是 ： 当事件y发生时，x有能力通知别的对象\n\n\n使用：用于对象或类间的动作协调与信息传递（消息推送）\n原理：事件模型（event model）中的两个 5\n发生——响应中的五个部分——闹钟响了你起床、孩子饿了你做饭。。。这里隐含这 订阅 关系\n发生——响应中的五个动作：\n我有一个事件\n一个人或者一群人关心我这个事件\n我的这个事件发生了\n关心这个事件的人会被依次通知到\n被通知到的人根据拿到的事件信息（又称事件数据、事件参数、通知）对事件进行响应（又称 处理事件）\n\n\n事件订阅者、事件参数\n\n\n提示\n事件多用于桌面、手机等开发的客户端编程、因为这些程序经常是用户通过事件来驱动的\n各种编程语言对这个机制的实现方法也不尽相同\nJava里面没有事件这种成员，也没有委托这种数据类型，Java的事件是通过接口来实现的\nMVC、MVP、MVVM等模式是事件模式更高级、更有效的玩法\n日常开发的时候，使用已有时间的机会比较多，自己声明事件的机会比较少\n事件的功能&#x3D;通知+可选的事件参数（即详细信息）\n\n\n\n","slug":"weito","date":"2024-01-28T13:28:20.000Z","categories_index":"","tags_index":"","author_index":"时雨"},{"id":"bc567916c4dc0d8169bd26d18e348d36","title":"test","content":"HelloWorld详解代码\n1234567891011121314151617using System;\t\t\t\t\t\t\t\t\t\t\t\t\t\t//从名称空间中引用到程序里面，using关键字为引用，后面为名称空间using System.Collections.Generic;using System.Linq;using System.Text;using System.Threading.Tasks;namespace ConsoleApp1\t\t\t\t//名称空间&#123;    class Program\t\t\t\t\t//类    &#123;        static void Main(string[] args)        &#123;            Console.WriteLine(&quot;HelloWorld&quot;);\t\t//WriteLine也是类，作用为输出，Console也是类来自名称空间System        &#125;    &#125;&#125;\n\n","slug":"test","date":"2024-01-28T10:13:13.000Z","categories_index":"","tags_index":"","author_index":"时雨"}]